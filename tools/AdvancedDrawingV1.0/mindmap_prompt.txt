请你使用graphviz实现一个XMind风格的思维导图，要求：

- 思维导图通常有一个中心主题，然后分支出多个子主题，这些子主题又可以有自己的子主题。
- 用graphviz实现思维导图用的是Python代码，下面是一些指引：

```python
import graphviz as gv # 这行直接复制即可，我已经安装了

# 创建思维导图
G = gv.Digraph(comment='思维导图的标题', format='png') # 可根据需要设置标题

# 设置图属性
G.attr(rankdir='LR')  # 水平布局，从左到右
G.attr('graph', size='12,8')  # 设置图形尺寸
G.attr('graph', dpi='300')  # 提高DPI
G.attr('graph', fontname='SimHei')  # 中文字体支持
G.attr('node', fontname='SimHei')  # 节点字体
G.attr('edge', fontname='SimHei')  # 边字体
G.attr(label='思维导图的标题') # 可根据需要设置标题

# 添加一级节点
G.node("节点上显示的文字", shape='box', style='filled', fillcolor='#六位数颜色代码') # 可根据需要设置节点样式
... # 根据需要可添加多个节点

# 添加一级节点的边（中心主题到一级节点）
G.edge("思维导图的标题", "节点上显示的文字")
... # 根据需要可添加多个边

# 添加二级节点
G.node("节点上显示的文字", shape='box', style='filled', fillcolor='#六位数颜色代码') # 可根据需要设置节点样式
... # 根据需要可添加多个节点

# 添加二级节点的边（一级节点到二级节点）
G.edge("一级节点上显示的文字", "二级节点上显示的文字")
... # 根据需要可添加多个边

... # 根据需要可添加更多节点和边

# 渲染图形
G.render('思维导图文件路径', format='png', cleanup=True)

```

- 你的输出也应当是一个以```python开头，```结尾的python文档，其中包含一个完整的思维导图代码，可以参考上面的格式示例，请注意，一定不要做成流程图，一定是思维导图，分点可以有很多个并且详细一些。
- 注意部分内容应当为字符串，否则会报错，例如：G.attr('graph', size='12,8')，这里的12,8应当是字符串，graph也是字符串。

下面我将给出用户期望的主题和内容：

【user_exp】

以及思维导图的文件路径：

【output_path】

让我们深呼吸一下，开始吧。